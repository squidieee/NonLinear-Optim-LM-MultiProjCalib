//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: JdXdT.cpp
//
// MATLAB Coder version            : 2.8
// C/C++ source code generated on  : 25-Sep-2018 15:14:58
//

// Include Files
#include "rt_nonfinite.h"
#include "JdXdT.h"
#include "rdivide.h"

// Function Definitions

//
// JDXDT
//     JDXDT = JDXDT(FX_P,FY_P,CX_P,CY_P,R11,R21,R31,R12,R22,R32,R13,R23,R33,T1,T2,T3,S1,S2,S3,R,X1_P,X2_P)
// Arguments    : double fx_p
//                double fy_p
//                double cx_p
//                double cy_p
//                double r11
//                double r21
//                double r31
//                double r12
//                double r22
//                double r32
//                double r13
//                double r23
//                double r33
//                double t1
//                double t2
//                double t3
//                double s1
//                double s2
//                double s3
//                double r
//                double x1_p
//                double x2_p
//                double b_JdXdT[9]
// Return Type  : void
//
void JdXdT(double fx_p, double fy_p, double cx_p, double cy_p, double r11,
           double r21, double r31, double r12, double r22, double r32, double
           r13, double r23, double r33, double t1, double t2, double t3, double
           s1, double s2, double s3, double r, double x1_p, double x2_p, double
           b_JdXdT[9])
{
  double t5;
  double t9;
  double t10;
  double t11;
  double t15;
  double t26;
  double t37;
  double t48;
  double t53;
  double t58;
  double t64;
  double t69;
  double t70;
  double t76;
  double t78;
  double t80;
  double t85;
  double t98;
  double t100;
  double t102;
  double t103;
  double t108;
  double t110;
  double t113;
  double t115;
  double t124;
  double t126;
  double t128;
  double t129;
  double t131;
  double t133;
  double t135;
  double t139;
  double t141;
  double t142;
  double t149;
  double t156;
  double t163;
  double x[9];

  //     This function was generated by the Symbolic Math Toolbox version 6.2.
  //     11-Aug-2016 17:52:49
  t5 = ((((((((cy_p * fx_p * r11 * r32 - cy_p * fx_p * r12 * r31) - cx_p * fy_p *
              r21 * r32) + cx_p * fy_p * r22 * r31) + fx_p * fy_p * r11 * r22) -
           fx_p * fy_p * r12 * r21) - fx_p * r11 * r32 * x2_p) + fx_p * r12 *
         r31 * x2_p) + fy_p * r21 * r32 * x1_p) - fy_p * r22 * r31 * x1_p;
  t9 = ((((fx_p * fy_p * r11 * r22 * r33 + fx_p * fy_p * r12 * r23 * r31) + fx_p
          * fy_p * r13 * r21 * r32) - fx_p * fy_p * r11 * r23 * r32) - fx_p *
        fy_p * r12 * r21 * r33) - fx_p * fy_p * r13 * r22 * r31;
  t10 = rdivide(1.0, t9 * t9);
  t11 = ((((((((cy_p * fx_p * r11 * r33 - cy_p * fx_p * r13 * r31) - cx_p * fy_p
               * r21 * r33) + cx_p * fy_p * r23 * r31) + fx_p * fy_p * r11 * r23)
            - fx_p * fy_p * r13 * r21) - fx_p * r11 * r33 * x2_p) + fx_p * r13 *
          r31 * x2_p) + fy_p * r21 * r33 * x1_p) - fy_p * r23 * r31 * x1_p;
  t15 = ((((((((cy_p * fx_p * r12 * r33 - cy_p * fx_p * r13 * r32) - cx_p * fy_p
               * r22 * r33) + cx_p * fy_p * r23 * r32) + fx_p * fy_p * r12 * r23)
            - fx_p * fy_p * r13 * r22) - fx_p * r12 * r33 * x2_p) + fx_p * r13 *
          r32 * x2_p) + fy_p * r22 * r33 * x1_p) - fy_p * r23 * r32 * x1_p;
  t26 = t5 * t5;
  t37 = t11 * t11;
  t48 = t15 * t15;
  t53 = rdivide(1.0, ((((r11 * r22 * r33 + r12 * r23 * r31) + r13 * r21 * r32) -
                       r11 * r23 * r32) - r12 * r21 * r33) - r13 * r22 * r31);
  t58 = r22 * r33 - r23 * r32;
  t64 = s3 + t53 * (((((r11 * r22 * t3 + r12 * r31 * t2) + r21 * r32 * t1) - r12
                      * r21 * t3) - r11 * r32 * t2) - r22 * r31 * t1);
  t69 = s2 - t53 * (((((r11 * r23 * t3 + r13 * r31 * t2) + r21 * r33 * t1) - r13
                      * r21 * t3) - r11 * r33 * t2) - r23 * r31 * t1);
  t70 = rdivide(1.0, t9);
  t76 = s1 + t53 * (((((r12 * r23 * t3 + r13 * r32 * t2) + r22 * r33 * t1) - r13
                      * r22 * t3) - r12 * r33 * t2) - r23 * r32 * t1);
  t78 = r21 * r32 - r22 * r31;
  t80 = r21 * r33 - r23 * r31;
  t85 = (t10 * t26 * 4.0 + t10 * t37 * 4.0) + t10 * t48 * 4.0;
  t98 = (t5 * t64 * t70 * 2.0 + t15 * t70 * t76 * 2.0) - t11 * t69 * t70 * 2.0;
  t100 = t5 * t53 * t70 * t78 * 2.0;
  t102 = t11 * t53 * t70 * t80 * 2.0;
  t103 = t15 * t53 * t58 * t70 * 2.0;
  t108 = rdivide(1.0, (t10 * t26 + t10 * t37) + t10 * t48);
  t110 = r12 * r33 - r13 * r32;
  t113 = r11 * r32 - r12 * r31;
  t115 = r11 * r33 - r13 * r31;
  t124 = 1.0 / sqrt(t98 * t98 - t85 * (((t64 * t64 + t69 * t69) + t76 * t76) - r
    * r));
  t126 = t5 * t53 * t70 * t113 * 2.0;
  t128 = t11 * t53 * t70 * t115 * 2.0;
  t129 = t15 * t53 * t70 * t110 * 2.0;
  t131 = r12 * r23 - r13 * r22;
  t133 = r11 * r22 - r12 * r21;
  t135 = r11 * r23 - r13 * r21;
  t139 = t5 * t53 * t70 * t133 * 2.0;
  t141 = t11 * t53 * t70 * t135 * 2.0;
  t142 = t15 * t53 * t70 * t131 * 2.0;
  t149 = ((t100 + t102) + t103) - t124 * (t85 * ((t53 * t64 * t78 * 2.0 + t53 *
    t58 * t76 * 2.0) - t53 * t69 * t80 * 2.0) - t98 * ((t100 + t102) + t103) *
    2.0) * 0.5;
  t156 = ((t126 + t128) + t129) - t124 * (t85 * ((t53 * t64 * t113 * 2.0 + t53 *
    t76 * t110 * 2.0) - t53 * t69 * t115 * 2.0) - t98 * ((t126 + t128) + t129) *
    2.0) * 0.5;
  t163 = ((t139 + t141) + t142) - t124 * (t85 * ((t53 * t64 * t133 * 2.0 + t53 *
    t76 * t131 * 2.0) - t53 * t69 * t135 * 2.0) - t98 * ((t139 + t141) + t142) *
    2.0) * 0.5;
  x[0] = -t53 * t58 + t15 * t70 * t108 * t149 * 0.5;
  x[1] = t53 * t80 - t11 * t70 * t108 * t149 * 0.5;
  x[2] = -t53 * t78 + t5 * t70 * t108 * t149 * 0.5;
  x[3] = t53 * t110 - t15 * t70 * t108 * t156 * 0.5;
  x[4] = -t53 * t115 + t11 * t70 * t108 * t156 * 0.5;
  x[5] = t53 * t113 - t5 * t70 * t108 * t156 * 0.5;
  x[6] = -t53 * t131 + t15 * t70 * t108 * t163 * 0.5;
  x[7] = t53 * t135 - t11 * t70 * t108 * t163 * 0.5;
  x[8] = -t53 * t133 + t5 * t70 * t108 * t163 * 0.5;
  memcpy(&b_JdXdT[0], &x[0], 9U * sizeof(double));
}

//
// File trailer for JdXdT.cpp
//
// [EOF]
//
