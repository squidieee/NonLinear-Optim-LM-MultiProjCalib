/*
 * Academic License - for use in teaching, academic research, and meeting
 * course requirements at degree granting institutions only.  Not for
 * government, commercial, or other organizational use.
 * File: Jdxdfc.c
 *
 * MATLAB Coder version            : 2.8
 * C/C++ source code generated on  : 21-Sep-2018 15:29:02
 */

/* Include Files */
#include "rt_nonfinite.h"
#include "Jdxdfc.h"

/* Function Definitions */

/*
 * JDXDFC
 *     JDXDFC = JDXDFC(X1,X2,X3,FX_C,FY_C,CX_C,CY_C,KC1,KC2,KC3,PC1,PC2)
 * Arguments    : double X1
 *                double X2
 *                double X3
 *                double fx_c
 *                double fy_c
 *                double cx_c
 *                double cy_c
 *                double kc1
 *                double kc2
 *                double kc3
 *                double pc1
 *                double pc2
 *                double b_Jdxdfc[4]
 * Return Type  : void
 */
void Jdxdfc(double X1, double X2, double X3, double fx_c, double fy_c, double
            cx_c, double cy_c, double kc1, double kc2, double kc3, double pc1,
            double pc2, double b_Jdxdfc[4])
{
  double t2;
  double t3;
  double t4;
  double t5;
  double t7;
  double t6;
  double t8;
  double t9;
  double t13;
  double x[4];
  int k;
  (void)fx_c;
  (void)fy_c;
  (void)cx_c;
  (void)cy_c;

  /*     This function was generated by the Symbolic Math Toolbox version 6.2. */
  /*     11-Aug-2016 17:44:09 */
  t2 = 1.0 / (X3 * X3);
  t3 = X1 * X1;
  t4 = X2 * X2;
  t5 = t2 * t4;
  t7 = t2 * t3;
  t6 = t5 + t7;
  t8 = t6 * t6;
  t9 = 1.0 / X3;
  t13 = ((kc2 * t8 + kc3 * t6 * t8) + kc1 * t6) + 1.0;
  x[0] = (pc2 * (t5 + t2 * t3 * 3.0) + X1 * t9 * t13) + X1 * X2 * pc1 * t2 * 2.0;
  x[1] = 0.0;
  x[2] = 0.0;
  x[3] = (pc1 * (t7 + t2 * t4 * 3.0) + X2 * t9 * t13) + X1 * X2 * pc2 * t2 * 2.0;
  for (k = 0; k < 4; k++) {
    b_Jdxdfc[k] = x[k];
  }
}

/*
 * File trailer for Jdxdfc.c
 *
 * [EOF]
 */
