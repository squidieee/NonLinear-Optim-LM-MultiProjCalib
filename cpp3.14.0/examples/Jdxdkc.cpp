//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: Jdxdkc.cpp
//
// MATLAB Coder version            : 2.8
// C/C++ source code generated on  : 25-Sep-2018 15:09:37
//

// Include Files
#include "rt_nonfinite.h"
#include "Jdxdkc.h"

// Function Definitions

//
// JDXDKC
//     JDXDKC = JDXDKC(X1,X2,X3,FX_C,FY_C,CX_C,CY_C,KC1,KC2,KC3,PC1,PC2)
// Arguments    : double X1
//                double X2
//                double X3
//                double fx_c
//                double fy_c
//                double cx_c
//                double cy_c
//                double kc1
//                double kc2
//                double kc3
//                double pc1
//                double pc2
//                double b_Jdxdkc[10]
// Return Type  : void
//
void Jdxdkc(double X1, double X2, double X3, double fx_c, double fy_c, double,
            double, double, double, double, double, double, double b_Jdxdkc[10])
{
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  double x[10];

  //     This function was generated by the Symbolic Math Toolbox version 6.2.
  //     11-Aug-2016 17:44:09
  t2 = 1.0 / (X3 * X3);
  t3 = 1.0 / X3;
  t4 = X1 * X1;
  t5 = t2 * t4;
  t6 = X2 * X2;
  t7 = t2 * t6;
  t8 = t5 + t7;
  t9 = t8 * t8;
  x[0] = X1 * fx_c * t3 * t8;
  x[1] = X2 * fy_c * t3 * t8;
  x[2] = X1 * fx_c * t3 * t9;
  x[3] = X2 * fy_c * t3 * t9;
  x[4] = X1 * fx_c * t3 * t8 * t9;
  x[5] = X2 * fy_c * t3 * t8 * t9;
  x[6] = X1 * X2 * fx_c * t2 * 2.0;
  x[7] = fy_c * (t5 + t2 * t6 * 3.0);
  x[8] = fx_c * (t7 + t2 * t4 * 3.0);
  x[9] = X1 * X2 * fy_c * t2 * 2.0;
  memcpy(&b_Jdxdkc[0], &x[0], 10U * sizeof(double));
}

//
// File trailer for Jdxdkc.cpp
//
// [EOF]
//
