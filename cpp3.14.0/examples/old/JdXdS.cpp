//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: JdXdS.cpp
//
// MATLAB Coder version            : 2.8
// C/C++ source code generated on  : 25-Sep-2018 16:02:46
//

// Include Files
#include "rt_nonfinite.h"
#include "func_FC.h"
#include "JdXdS.h"

// Function Definitions

//
// JDXDS
//     JDXDS = JDXDS(FX_P,FY_P,CX_P,CY_P,R11,R21,R31,R12,R22,R32,R13,R23,R33,T1,T2,T3,S1,S2,S3,R,X1_P,X2_P)
// Arguments    : double fx_p
//                double fy_p
//                double cx_p
//                double cy_p
//                double r11
//                double r21
//                double r31
//                double r12
//                double r22
//                double r32
//                double r13
//                double r23
//                double r33
//                double t1
//                double t2
//                double t3
//                double s1
//                double s2
//                double s3
//                double r
//                double x1_p
//                double x2_p
//                double b_JdXdS[12]
// Return Type  : void
//
void JdXdS(double fx_p, double fy_p, double cx_p, double cy_p, double r11,
           double r21, double r31, double r12, double r22, double r32, double
           r13, double r23, double r33, double t1, double t2, double t3, double
           s1, double s2, double s3, double r, double x1_p, double x2_p, double
           b_JdXdS[12])
{
  double t5;
  double t9;
  double t10;
  double t11;
  double t15;
  double t20;
  double t34;
  double t48;
  double t59;
  double t61;
  double t63;
  double t65;
  double t69;
  double t71;
  double t75;
  double t76;
  double t81;
  double t91;
  double t100;
  double t105;
  double t112;
  double t130;
  double t113;
  double t121;
  double t127;
  double t133;
  double t128;
  double x[12];

  //     This function was generated by the Symbolic Math Toolbox version 6.2.
  //     11-Aug-2016 17:53:01
  t5 = ((((((((cy_p * fx_p * r11 * r32 - cy_p * fx_p * r12 * r31) - cx_p * fy_p *
              r21 * r32) + cx_p * fy_p * r22 * r31) + fx_p * fy_p * r11 * r22) -
           fx_p * fy_p * r12 * r21) - fx_p * r11 * r32 * x2_p) + fx_p * r12 *
         r31 * x2_p) + fy_p * r21 * r32 * x1_p) - fy_p * r22 * r31 * x1_p;
  t9 = ((((fx_p * fy_p * r11 * r22 * r33 + fx_p * fy_p * r12 * r23 * r31) + fx_p
          * fy_p * r13 * r21 * r32) - fx_p * fy_p * r11 * r23 * r32) - fx_p *
        fy_p * r12 * r21 * r33) - fx_p * fy_p * r13 * r22 * r31;
  t10 = 1.0 / (t9 * t9);
  t11 = ((((((((cy_p * fx_p * r11 * r33 - cy_p * fx_p * r13 * r31) - cx_p * fy_p
               * r21 * r33) + cx_p * fy_p * r23 * r31) + fx_p * fy_p * r11 * r23)
            - fx_p * fy_p * r13 * r21) - fx_p * r11 * r33 * x2_p) + fx_p * r13 *
          r31 * x2_p) + fy_p * r21 * r33 * x1_p) - fy_p * r23 * r31 * x1_p;
  t15 = ((((((((cy_p * fx_p * r12 * r33 - cy_p * fx_p * r13 * r32) - cx_p * fy_p
               * r22 * r33) + cx_p * fy_p * r23 * r32) + fx_p * fy_p * r12 * r23)
            - fx_p * fy_p * r13 * r22) - fx_p * r12 * r33 * x2_p) + fx_p * r13 *
          r32 * x2_p) + fy_p * r22 * r33 * x1_p) - fy_p * r23 * r32 * x1_p;
  t20 = 1.0 / (((((r11 * r22 * r33 + r12 * r23 * r31) + r13 * r21 * r32) - r11 *
                 r23 * r32) - r12 * r21 * r33) - r13 * r22 * r31);
  t34 = 1.0 / t9;
  t48 = ((((r12 * r23 * t3 + r13 * r32 * t2) + r22 * r33 * t1) - r13 * r22 * t3)
         - r12 * r33 * t2) - r23 * r32 * t1;
  t59 = t5 * t5;
  t61 = t11 * t11;
  t63 = t15 * t15;
  t65 = (t10 * t59 * 4.0 + t10 * t61 * 4.0) + t10 * t63 * 4.0;
  t69 = ((((r11 * r22 * t3 + r12 * r31 * t2) + r21 * r32 * t1) - r12 * r21 * t3)
         - r11 * r32 * t2) - r22 * r31 * t1;
  t71 = s3 + t20 * t69;
  t75 = ((((r11 * r23 * t3 + r13 * r31 * t2) + r21 * r33 * t1) - r13 * r21 * t3)
         - r11 * r33 * t2) - r23 * r31 * t1;
  t76 = s2 - t20 * t75;
  t81 = s1 + t20 * t48;
  t91 = (t5 * t34 * t71 * 2.0 + t15 * t34 * t81 * 2.0) - t11 * t34 * t76 * 2.0;
  t100 = 1.0 / sqrt(t91 * t91 - t65 * (((t71 * t71 + t76 * t76) + t81 * t81) - r
    * r));
  t105 = 1.0 / ((t10 * t59 + t10 * t61) + t10 * t63);
  t112 = t15 * t34 * 2.0;
  t130 = t100 * (t65 * (s1 * 2.0 + t20 * t48 * 2.0) - t15 * t34 * t91 * 4.0) *
    0.5;
  t113 = t112 - t130;
  t121 = t100 * (t65 * (s2 * 2.0 - t20 * t75 * 2.0) + t11 * t34 * t91 * 4.0) *
    0.5 + t11 * t34 * 2.0;
  t127 = t5 * t34 * 2.0;
  t133 = t100 * (t65 * (s3 * 2.0 + t20 * t69 * 2.0) - t5 * t34 * t91 * 4.0) *
    0.5;
  t128 = t127 - t133;
  x[0] = t15 * t34 * t105 * t113 * 0.5;
  x[1] = t11 * t34 * t105 * t113 * -0.5;
  x[2] = t5 * t34 * t105 * (t112 - t130) * 0.5;
  x[3] = t15 * t34 * t105 * t121 * -0.5;
  x[4] = t11 * t34 * t105 * t121 * 0.5;
  x[5] = t5 * t34 * t105 * t121 * -0.5;
  x[6] = t15 * t34 * t105 * t128 * 0.5;
  x[7] = t11 * t34 * t105 * t128 * -0.5;
  x[8] = t5 * t34 * t105 * (t127 - t133) * 0.5;
  x[9] = r * t15 * t34 * t65 * t100 * t105 * 0.5;
  x[10] = r * t11 * t34 * t65 * t100 * t105 * -0.5;
  x[11] = r * t5 * t34 * t65 * t100 * t105 * 0.5;
  memcpy(&b_JdXdS[0], &x[0], 12U * sizeof(double));
}

//
// File trailer for JdXdS.cpp
//
// [EOF]
//
